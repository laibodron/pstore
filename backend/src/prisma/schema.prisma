generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String            @id @default(uuid())
  email       String            @unique
  phoneNumber String            @unique
  username    String            @unique
  password    String
  name        String?
  surname     String?
  avatarUrl   String?
  createdAt   DateTime          @default(now())
  wishlist    ProductFavorite[]
  productCart ProductCart[]
  orders      Order[]
}

model Product {
  id              String            @id @default(uuid())
  article         String            @unique
  title           String
  price           Int
  createdAt       DateTime          @default(now())
  description     String?
  images          String[]          @default([])
  productFavorite ProductFavorite[]
  productCart     ProductCart[]
  orderStructures OrderStructure[]
}

model ProductFavorite {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
}

model ProductCart {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  count     Int

  @@unique([userId, productId])
}

enum OrderStatus {
  CREATED
  PAID
  SHIPPED
  COMPLETED
  CANCELLED
}

model Order {
  id              String           @id @default(uuid())
  serialNumber    Int              @unique @default(autoincrement())
  createdAt       DateTime         @default(now())
  totalPrice      Int
  paymentId       String?
  userId          String?
  user            User?            @relation(fields: [userId], references: [id])
  phoneNumber     String
  email           String?
  status          OrderStatus      @default(CREATED)
  orderStructures OrderStructure[]

  @@index([userId])
}

model OrderStructure {
  id        String  @id @default(uuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)
  price     Int
  count     Int
}
